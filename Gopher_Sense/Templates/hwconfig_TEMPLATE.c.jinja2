// Autogenerated by SensorCannon
#include "{{configFileName}}.h"
#include "GopherCan.h"
#include "gopher_sense.h"

//ADC1
{% for param in module.adc1_params %}
{% set i = loop.index %}
// adc1_param{{i}}
ANALOG_SENSOR_PARAM adc1_param{{i}};

adc1_param{{i}}.analog_param = {{param.param_name}};
adc1_param{{i}}.param_id = {{param.id}};
adc1_param{{i}}.analog_sensor = {{module.getSensorName(param.producer)}};
{% set l = param.filtered_params|length %}
adc1_param{{i}}.num_filtered_subparams = {{l}};

{% if l > 0 %}
{% for fparam in param.filtered_params -%}
FILTERED_PARAM adc1_param{{i}}_filtered_{{loop.index}};
adc1_param{{i}}_filtered_{{loop.index}}.filtered_param = {{fparam.param_name}};
adc1_param{{i}}_filtered_{{loop.index}}.param_id = {{fparam.id}}
adc1_param{{i}}_filtered_{{loop.index}}.filter_type = {{fparam.filter[0]}}
adc1_param{{i}}_filtered_{{loop.index}}.filter_value = {{fparam.filter[1]}}
{% endfor %}
FILTERED_PARAM adc1_param{{i}}_fparam_list[{{l}}] = {
{% for n in range(l) %}
adc1_param{{i}}_filtered_{{n+1}}{% if n+1 < l %},{% endif %}
{% endfor %}
};
adc1_param{{i}}.filtered_subparams = adc1_param{{i}}_fparam_list;
{% else %}
adc1_param{{i}}.filtered_subparams = NULL;
{% endif %}

U16_BUFFER adc1_param{{i}}_u16buffer;
U16 adc1_param{{i}}_buffer[{{param.buffer_size}}]; 
adc1_param{{i}}_u16buffer.buffer = adc1_param{{i}}_buffer;
adc1_param{{i}}_u16buffer.buffer_size = {{param.buffer_size}};
adc1_param{{i}}_u16buffer.fill_level = 0;

adc1_param{{i}}.buffer = adc1_param{{i}}_u16buffer;
{% endfor %}

{% set l = module.adc1_params|length%}
{% if l > 0 %}
ANALOG_SENSOR_PARAM adc1_sensor_params[NUM_ADC1_PARAMS] = {
    {% for n in range(l) %}
    adc1_param{{n+1}}{% if loop.index < l %},{% endif %}
    {% endfor%}
};
{% else %}
ANALOG_SENSOR_PARAM* adc1_sensor_params = NULL;
{% endif %}


//ADC2
{% for param in module.adc2_params %}
{% set i = loop.index %}
// adc2_param{{i}}
ANALOG_SENSOR_PARAM adc2_param{{i}};

adc2_param{{i}}.analog_param = {{param.param_name}};
adc2_param{{i}}.param_id = {{param.id}};
adc2_param{{i}}.analog_sensor = {{module.getSensorName(param.producer)}};
{% set l = param.filtered_params|length %}
adc2_param{{i}}.num_filtered_subparams = {{l}};

{% if l > 0 %}
{% for fparam in param.filtered_params -%}
FILTERED_PARAM adc2_param{{i}}_filtered_{{loop.index}};
adc2_param{{i}}_filtered_{{loop.index}}.filtered_param = {{fparam.param_name}};
adc2_param{{i}}_filtered_{{loop.index}}.param_id = {{fparam.id}};
adc2_param{{i}}_filterefparam.filter[0]ram.filter['filter_type'].upper()}};
adc2_param{{i}}_filtered_{{loop.index}}.filter_value = {{fparam.filter[1]}};
{% endfor %}
FILTERED_PARAM adc2_param{{i}}_fparam_list[{{l}}] = {
{% for n in range(l) %}
adc2_param{{i}}_filtered_{{n+1}}{% if n+1 < l %},{% endif %}
{% endfor %}
};
adc2_param{{i}}.filtered_subparams = adc2_param{{i}}_fparam_list;
{% else %}
adc2_param{{i}}.filtered_subparams = NULL;
{% endif %}


U16_BUFFER adc2_param{{i}}_u16buffer;
U16 adc2_param{{i}}_buffer[{{param.buffer_size}}]; 
adc2_param{{i}}_u16buffer.buffer = adc2_param{{i}}_buffer;
adc2_param{{i}}_u16buffer.buffer_size = {{param.buffer_size}};
adc2_param{{i}}_u16buffer.fill_level = 0;

adc2_param{{i}}.buffer = adc2_param{{i}}_u16buffer;
{% endfor %}

{% set l = module.adc2_params|length%}
{% if l > 0 %}
ANALOG_SENSOR_PARAM adc2_sensor_params[NUM_ADC2_PARAMS] = {
    {% for n in range(l) %}
    adc2_param{{n+1}}{% if loop.index < l %},{% endif %}
    {% endfor%}
};
{% else %}
ANALOG_SENSOR_PARAM* adc2_sensor_params = NULL;
{% endif %}

//ADC3
{% for param in module.adc3_params %}
{% set i = loop.index %}
// adc3_param{{i}}
ANALOG_SENSOR_PARAM adc3_param{{i}};

adc3_param{{i}}.analog_param = {{param.param_name}};
adc3_param{{i}}.param_id = {{param.id}};
adc3_param{{i}}.analog_sensor = {{module.getSensorName(param.producer)}};
{% set l = param.filtered_params|length %}
adc3_param{{i}}.num_filtered_subparams = {{l}};

{% if l > 0%}
{% for fparam in param.filtered_params -%}
FILTERED_PARAM adc3_param{{i}}_filtered_{{loop.index}};
adc3_param{{i}}_filtered_{{loop.index}}.filtered_param = {{fparam.param_name}};
adc3_param{{i}}_filtered_{{loop.index}}.param_id = {{fparam.id}};
adc3_param{{i}}_filtered_{{loop.index}}.filter_type = {{fparam.filter[0]}};
adc3_param{{i}}_filtered_{{loop.index}}.filter_value = {{fparam.filter[1]}};
{% endfor %}
FILTERED_PARAM adc3_param{{i}}_fparam_list[{{l}}] = {
{% for n in range(l) %}
adc3_param{{i}}_filtered_{{n+1}}{% if n+1 < l %},{% endif %}
{% endfor %}
};
adc3_param{{i}}.filtered_subparams = adc3_param{{i}}_fparam_list;
{% else %}
adc3_param{{i}}.filtered_subparams = NULL;
{% endif %}

U16_BUFFER adc3_param{{i}}_u16buffer;
U16 adc3_param{{i}}_buffer[{{param.buffer_size}}]; 
adc3_param{{i}}_u16buffer.buffer = adc3_param{{i}}_buffer;
adc3_param{{i}}_u16buffer.buffer_size = {{param.buffer_size}};
adc3_param{{i}}_u16buffer.fill_level = 0;

adc3_param{{i}}.buffer = adc3_param{{i}}_u16buffer;
{% endfor %}

{% set l = module.adc3_params|length%}
{% if l > 0 %}
ANALOG_SENSOR_PARAM adc3_sensor_params[NUM_ADC3_PARAMS] = {
    {% for n in range(l) %}
    adc3_param{{n+1}}{% if loop.index < l %},{% endif %}
    {% endfor%}
};
{% else %}
ANALOG_SENSOR_PARAM* adc3_sensor_params = NULL;
{% endif %}


//CAN_SENSOR_PARAMS
{% for param in module.can_params %}
{% set i = loop.index %}
// can_param{{i}}
CAN_SESNOR_PARAM can_param{{i}};
can_param{{i}}.can_param = {{param.param_name}};
can_param{{i}}.param_id = {{param.id}};
{% set name = module.getSensorName(param.producer) %}
can_param{{i}}.can_sensor = {{name}}
can_param{{i}}.message_idx = {{module.getDependencyMessageIndex(name, param.dependency)}}
{% set l = param.filtered_params|length %}
can_param{{i}}.num_filtered_subparams = {{l}};

{% if l > 0%}
{% for fparam in param.filtered_params -%}
FILTERED_PARAM can_param{{i}}_filtered_{{loop.index}};
can_param{{i}}_filtered_{{loop.index}}.filtered_param = {{fparam.param_name}};
can_param{{i}}_filtered_{{loop.index}}.param_id = {{fparam.id}};
can_param{{i}}_filtered_{{loop.index}}.filter_type = {{fparam.filter[0]}};
can_param{{i}}_filtered_{{loop.index}}.filter_value = {{fparam.filter[1]}};
{% endfor %}
FILTERED_PARAM can_param{{i}}_fparam_list[{{l}}] = {
{% for n in range(l) %}
can_param{{i}}_filtered_{{n+1}}{% if n+1 < l %},{% endif %}
{% endfor %}
};
can_param{{i}}.filtered_subparams = can_param{{i}}_fparam_list;
{% else %}
can_param{{i}}.filtered_subparams = NULL;
{% endif %}

U16_BUFFER can_param{{i}}_u16buffer;
U16 can_param{{i}}_buffer[{{param.buffer_size}}]; 
can_param{{i}}_u16buffer.buffer = can_param{{i}}_buffer;
can_param{{i}}_u16buffer.buffer_size = {{param.buffer_size}};
can_param{{i}}_u16buffer.fill_level = 0;

can_param{{i}}.buffer = can_param{{i}}_u16buffer;

{% endfor %}
 
{% set l = module.can_params|length%}
{% if l > 0%}
CAN_SENSOR_PARAM can_sensor_params[NUM_CAN_PARAMS] = {
    {% for n in range(l) %}
    can_param{{n+1}}{% if loop.index < l %},{% endif %}
    {% endfor%}
};
{% else %}
CAN_SENSOR_PARAM* can_sensor_params = NULL;
{% endif %}

// Buckets if any
{% if buckets|length > 0 -%}
{% for bucket in buckets %}
// Define bucket {{bucket.name}}
BUCKET {{bucket.name}};
{{bucket.name}}.bucket_id = {{bucket.id}};
{{bucket.name}}.frequency = {{bucket.frequency}};

PARAM_LIST {{bucket.name}}_bucket_param_list;
{{bucket.name}}_bucket_param_list.len = {{bucket.params|length}};

GENERAL_PARAMETER {{bucket.name}}_bucket_general_param_list[{{bucket.params|length}}] = {
{% for param in bucket.params -%}
{{param}}{% if loop.index < bucket.params|length %},{% endif %}
{% endfor %}
};

{{bucket.name}}_bucket_param_list.list = {{bucket.name}}_bucket_general_param_list;
{{bucket.name}}.bucket = {{bucket.name}}_bucket_param_list;


{% endfor %}
BUCKET buckets[NUM_BUCKETS] = {
{% for bucket in buckets -%}
{{bucket.name}}{% if loop.index < buckets|length%},{% endif %}
{% endfor %}
};
{% else %}
BUCKET* buckets = NULL;
{% endif %}

//END autogenerted file